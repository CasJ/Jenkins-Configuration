<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.8">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.21">
    <script>
stage &apos;Sandbox&apos;
node(&apos;onmetal-provisioner&apos;) {
    
    throw new Exception()
    def host_ip = &apos;65.61.190.78&apos;
    def resulst
    int index
    String newline = &quot;\n&quot;
    def failures
    
    // Run the tests and store the results in ~/subunit/before
    results = sh returnStdout: true, script: &quot;&quot;&quot;
    ssh -o StrictHostKeyChecking=no root@${host_ip} &apos;&apos;&apos;
    cd /root/tempest/
    stream_id=`cat .testrepository/next-stream`
    ostestr --regex smoke
    mkdir -p /root/subunit/smoke/
    cp .testrepository/\$stream_id /root/subunit/smoke/temp
    &apos;&apos;&apos;
    &quot;&quot;&quot;
    
    println &apos;These are the results generated by the script&apos;
    println results
    
    if (results.contains(&apos;- Failed:&apos;) == true) {
        
        failures = results.substring(results.indexOf(&apos;- Failed:&apos;) + 10)
        failures = failures.substring(0,failures.indexOf(newline)).toInteger()
        if (failures &gt; 1) {
            println &quot;${failures} tests from the Tempest smoke tests failed, stopping the pipeline.&quot;
            throw new Exception()
        } else {
            println &apos;The Tempest smoke tests were successfull.&apos;
        }
    }
    
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>